# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from protos import bandit_pb2 as protos_dot_bandit__pb2


class BanditStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.get = channel.unary_unary(
                '/grpc.bandit.v1.Bandit/get',
                request_serializer=protos_dot_bandit__pb2.GetRequest.SerializeToString,
                response_deserializer=protos_dot_bandit__pb2.GetResponse.FromString,
                )
        self.rank = channel.unary_unary(
                '/grpc.bandit.v1.Bandit/rank',
                request_serializer=protos_dot_bandit__pb2.RankRequest.SerializeToString,
                response_deserializer=protos_dot_bandit__pb2.RankResponse.FromString,
                )
        self.select = channel.unary_unary(
                '/grpc.bandit.v1.Bandit/select',
                request_serializer=protos_dot_bandit__pb2.SelectRequest.SerializeToString,
                response_deserializer=protos_dot_bandit__pb2.SelectResponse.FromString,
                )
        self.samples = channel.unary_unary(
                '/grpc.bandit.v1.Bandit/samples',
                request_serializer=protos_dot_bandit__pb2.SamplesRequest.SerializeToString,
                response_deserializer=protos_dot_bandit__pb2.SamplesResponse.FromString,
                )
        self.betas = channel.unary_unary(
                '/grpc.bandit.v1.Bandit/betas',
                request_serializer=protos_dot_bandit__pb2.BetasRequest.SerializeToString,
                response_deserializer=protos_dot_bandit__pb2.BetasResponse.FromString,
                )
        self.update = channel.unary_unary(
                '/grpc.bandit.v1.Bandit/update',
                request_serializer=protos_dot_bandit__pb2.UpdateRequest.SerializeToString,
                response_deserializer=protos_dot_bandit__pb2.UpdateResponse.FromString,
                )
        self.delete = channel.unary_unary(
                '/grpc.bandit.v1.Bandit/delete',
                request_serializer=protos_dot_bandit__pb2.DeleteRequest.SerializeToString,
                response_deserializer=protos_dot_bandit__pb2.DeleteResponse.FromString,
                )


class BanditServicer(object):
    """Missing associated documentation comment in .proto file."""

    def get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def rank(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def select(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def samples(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def betas(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def update(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BanditServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'get': grpc.unary_unary_rpc_method_handler(
                    servicer.get,
                    request_deserializer=protos_dot_bandit__pb2.GetRequest.FromString,
                    response_serializer=protos_dot_bandit__pb2.GetResponse.SerializeToString,
            ),
            'rank': grpc.unary_unary_rpc_method_handler(
                    servicer.rank,
                    request_deserializer=protos_dot_bandit__pb2.RankRequest.FromString,
                    response_serializer=protos_dot_bandit__pb2.RankResponse.SerializeToString,
            ),
            'select': grpc.unary_unary_rpc_method_handler(
                    servicer.select,
                    request_deserializer=protos_dot_bandit__pb2.SelectRequest.FromString,
                    response_serializer=protos_dot_bandit__pb2.SelectResponse.SerializeToString,
            ),
            'samples': grpc.unary_unary_rpc_method_handler(
                    servicer.samples,
                    request_deserializer=protos_dot_bandit__pb2.SamplesRequest.FromString,
                    response_serializer=protos_dot_bandit__pb2.SamplesResponse.SerializeToString,
            ),
            'betas': grpc.unary_unary_rpc_method_handler(
                    servicer.betas,
                    request_deserializer=protos_dot_bandit__pb2.BetasRequest.FromString,
                    response_serializer=protos_dot_bandit__pb2.BetasResponse.SerializeToString,
            ),
            'update': grpc.unary_unary_rpc_method_handler(
                    servicer.update,
                    request_deserializer=protos_dot_bandit__pb2.UpdateRequest.FromString,
                    response_serializer=protos_dot_bandit__pb2.UpdateResponse.SerializeToString,
            ),
            'delete': grpc.unary_unary_rpc_method_handler(
                    servicer.delete,
                    request_deserializer=protos_dot_bandit__pb2.DeleteRequest.FromString,
                    response_serializer=protos_dot_bandit__pb2.DeleteResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'grpc.bandit.v1.Bandit', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Bandit(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.bandit.v1.Bandit/get',
            protos_dot_bandit__pb2.GetRequest.SerializeToString,
            protos_dot_bandit__pb2.GetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def rank(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.bandit.v1.Bandit/rank',
            protos_dot_bandit__pb2.RankRequest.SerializeToString,
            protos_dot_bandit__pb2.RankResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def select(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.bandit.v1.Bandit/select',
            protos_dot_bandit__pb2.SelectRequest.SerializeToString,
            protos_dot_bandit__pb2.SelectResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def samples(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.bandit.v1.Bandit/samples',
            protos_dot_bandit__pb2.SamplesRequest.SerializeToString,
            protos_dot_bandit__pb2.SamplesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def betas(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.bandit.v1.Bandit/betas',
            protos_dot_bandit__pb2.BetasRequest.SerializeToString,
            protos_dot_bandit__pb2.BetasResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.bandit.v1.Bandit/update',
            protos_dot_bandit__pb2.UpdateRequest.SerializeToString,
            protos_dot_bandit__pb2.UpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.bandit.v1.Bandit/delete',
            protos_dot_bandit__pb2.DeleteRequest.SerializeToString,
            protos_dot_bandit__pb2.DeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
